{"version":3,"file":"aimapi.js","sources":["../src/aimConf.js","../utils/modality.js","../utils/aid.js","../src/Aim.jsx","../src/aimHelper.js"],"sourcesContent":["export default {\n  aimVersion: \"AIMv4_3\",\n  \"xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n  \"xmlns:rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n  xmlns: \"gme://caCORE.caCORE/4.4/edu.northwestern.radiology.AIM\",\n  \"xsi:schemaLocation\":\n    \"gme://caCORE.caCORE/4.4/edu.northwestern.radiology.AIM AIM_v4.2_rv2_XML.xsd\"\n};\n","var dcmDesignator = \"DCM\";\nvar lexVersion = \"20121129\";\n//from the link below\n//http://dicom.nema.org/medical/dicom/current/output/chtml/part16/sect_CID_29.html\n//http://www.dicomlibrary.com/dicom/sop/\n\n//Default Values=> codeValue:99EPADM0 codeMaeaning:NA codingSchemeDesignator:99EPAD\n\nexport var modalities = {\n  \"1.2.840.10008.5.1.4.1.1.2\": {\n    codeValue: \"CT\",\n    codeMeaning: \"Computed Tomography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  \"1.2.840.10008.5.1.4.1.1.1\": {\n    codeValue: \"CR\",\n    codeMeaning: \"Computed Radiography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  \"1.2.840.10008.5.1.4.1.1.128\": {\n    codeValue: \"PT\",\n    codeMeaning: \"Positron emission tomography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  \"1.2.840.10008.5.1.4.1.1.4\": {\n    codeValue: \"MR\",\n    codeMeaning: \"Magnetic Resonance\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  \"1.2.840.10008.5.1.4.1.1.6.1\": {\n    codeValue: \"US\",\n    codeMeaning: \"Ultrasound\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  \"1.2.840.10008.5.1.4.1.1.1.2\": {\n    codeValue: \"MG\",\n    codeMeaning: \"Mammography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  \"1.2.840.10008.5.1.4.1.1.1.2.1\": {\n    codeValue: \"MG\",\n    codeMeaning: \"Mammography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  CT: {\n    codeValue: \"CT\",\n    codeMeaning: \"Computed Tomography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  CR: {\n    codeValue: \"CR\",\n    codeMeaning: \"Digital Radiography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  DX: {\n    codeValue: \"DX\",\n    codeMeaning: \"Computed Radiography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  PT: {\n    codeValue: \"PT\",\n    codeMeaning: \"Positron emission tomography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  MR: {\n    codeValue: \"MR\",\n    codeMeaning: \"Magnetic Resonance\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  US: {\n    codeValue: \"US\",\n    codeMeaning: \"Ultrasound\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  MG: {\n    codeValue: \"MG\",\n    codeMeaning: \"Mammography\",\n    codingSchemeDesignator: dcmDesignator,\n    codingSchemeVersion: lexVersion,\n  },\n  \"PET-CT\": {\n    codeValue: \"RID10341\",\n    codeMeaning: \"PET-CT\",\n    codingSchemeDesignator: \"RADLEX\",\n    codingSchemeVersion: \"4.1\",\n  },\n  \"PET-MR\": {\n    codeValue: \"RID10342\",\n    codeMeaning: \"PET-MR\",\n    codingSchemeDesignator: \"RADLEX\",\n    codingSchemeVersion: \"4.1\",\n  },\n  \"US-RF\": {\n    codeValue: \"RID49581\",\n    codeMeaning: \"US-RF\",\n    codingSchemeDesignator: \"RADLEX\",\n    codingSchemeVersion: \"4.1\",\n  },\n};\n","/**\n * For creating DICOM uids\n * Taken from dcmjs MetaDictionary\n * https://github.com/dcmjs-org/dcmjs/blob/master/src/DicomMetaDictionary.js#L5\n */\nexport function generateUid() {\n  let uid = \"2.25.\" + Math.floor(1 + Math.random() * 9);\n  for (let index = 0; index < 38; index++) {\n    uid = uid + Math.floor(Math.random() * 10);\n  }\n  return uid;\n}\n\nexport function persistExpandView(expanded, data, newData, id) {\n  const expandMap = {};\n  let counter = 0;\n  newData.forEach((el, i) => {\n    if (counter < data.length) {\n      if (el[id] === data[counter][id]) {\n        expandMap[i] = expanded[counter];\n        counter += 1;\n      } else {\n        expandMap[i] = false;\n      }\n    }\n  });\n  return expandMap;\n}\n","import aimConf from \"./aimConf\";\nimport { modalities } from \"../utils/modality\";\nimport { generateUid } from \"../utils/aid\";\nimport { enumAimType, getAimImageData, getStudyAimData, addSemanticAnswersToAimData, addUserToAimData } from \"./aimHelper\";\n\nclass Aim {\n  constructor(data, aimType, updatedAimId, trackingUId = generateUid()) {\n    let aimData;\n    const { image, study, answers, user } = data;\n    // new aim creation (data includes image||study data and answers)\n    if (image || study || answers) {\n      if (aimType === enumAimType.imageAnnotation) {\n        aimData = getAimImageData(image);\n      }\n      if (aimType === enumAimType.studyAnnotation) {\n        aimData = getStudyAimData(study);\n      }\n      addSemanticAnswersToAimData(answers, aimData);\n      // addUserToAimData(user, aimData);\n    }\n    else { //old way of aim creation to support functionalities that depend on aimapi\n      aimData = data;\n    }\n    this.temp = {};\n    ({\n      aim: this.temp.aim,\n      study: this.temp.study,\n      series: this.temp.series,\n      image: this.temp.image,\n      segmentation: this.temp.segmentation,\n      equipment: this.temp.equipment,\n      user: this.temp.user,\n      person: this.temp.person,\n    } = aimData);\n    this.temp.aimType = aimType;\n    this.temp.aim.trackingUId = trackingUId;\n    // this.xmlns = aimConf.xmlns;\n    // this[\"xmlns:rdf\"] = aimConf[\"xmlns:rdf\"];\n    // this[\"xmlns:xsi\"] = aimConf[\"xmlns:xsi\"];\n    this.aimVersion = aimConf.aimVersion;\n    // this[\"xsi:schemaLocation\"] = aimConf[\"xsi:schemaLocation\"];\n    this.uniqueIdentifier = \"\";\n    this.studyInstanceUid = { root: this.temp.aim.studyInstanceUid };\n    this.seriesInstanceUid = { root: generateUid() };\n    this.accessionNumber = { value: this.temp.study.accessionNumber };\n    this.dateTime = { value: this.getDate() };\n    this.user = user;\n    // this.user = this._createUser(this.temp.user);\n    this.equipment = this._createEquipment(this.temp.equipment);\n    this.person = this._createPerson(this.temp.person);\n    this.imageAnnotations = {\n      ImageAnnotation: [this._createImageAnnotations()],\n    };\n    if (updatedAimId === undefined)\n      this.uniqueIdentifier = { root: generateUid() };\n    else this.uniqueIdentifier = { root: updatedAimId };\n  }\n\n  static parse(data) {\n    return new Aim(data);\n  }\n\n  // static getMarkups(aim) {\n  //   let annotations = [];\n  //   let annotation = {};\n  //   const markupEntities =\n  //     aim.imageAnnotations.ImageAnnotation.markupEntityCollection.MarkupEntity;\n\n  //   if (markupEntities.constructor === Array) {\n  //     markupEntities.map(markupEntity => {\n  //       var imageId = markupEntity[\"imageReferenceUid\"][\"root\"];\n  //       var markupUid = markupEntity[\"uniqueIdentifier\"][\"root\"];\n  //       var calculations = this.getCalculationEntitiesOfMarkUp(aim, markupUid);\n  //       annotations.push({\n  //         imageId: imageId,\n  //         markupType: markupEntity[\"xsi:type\"],\n  //         coordinates:\n  //           markupEntity.twoDimensionSpatialCoordinateCollection\n  //             .TwoDimensionSpatialCoordinate,\n  //         calculations: calculations\n  //       });\n  //       this.getCalculationEntitiesOfMarkUp(aim);\n  //     });\n  //     return annotations;\n  //   } else if (\n  //     Object.entries(markupEntities).length !== 0 &&\n  //     markupEntities.constructor === Object\n  //   ) {\n  //     const imageId = markupEntities[\"imageReferenceUid\"][\"root\"];\n  //     const markupUid = markupEntities[\"uniqueIdentifier\"][\"root\"];\n  //     const calculations = this.getCalculationEntitiesOfMarkUp(aim, markupUid);\n  //     return {\n  //       imageId: imageId,\n  //       markupType: markupEntities[\"xsi:type\"],\n  //       coordinates:\n  //         markupEntities.twoDimensionSpatialCoordinateCollection\n  //           .TwoDimensionSpatialCoordinate,\n  //       calculations: calculations\n  //     };\n  //   }\n  // }\n\n  getDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + now.getDate()).slice(-2);\n    const hours = (\"0\" + now.getHours()).slice(-2);\n    const minutes = (\"0\" + now.getMinutes()).slice(-2);\n    const seconds = (\"0\" + now.getSeconds()).slice(-2);\n    return year + month + day + hours + minutes + seconds;\n  };\n\n  _createObject = (name, value) => {\n    var obj = {};\n    obj[name] = { value };\n    return obj;\n  };\n\n  /*                                          */\n  /*  Calculation Entitiy Realted Functions   */\n  /*                                          */\n\n  _createDimension = (label, index = 0, size = 1) => {\n    return {\n      Dimension: [\n        Object.assign(\n          {},\n          this._createObject(\"index\", index),\n          this._createObject(\"size\", size),\n          this._createObject(\"label\", label)\n        ),\n      ],\n    };\n  };\n\n  _createDoubleDataType = () => {\n    var obj = {\n      dataType: {\n        code: \"C48870\",\n        codeSystem: \"NCI\",\n        \"iso:displayName\": {\n          \"xmlns:iso\": \"uri:iso.org:21090\",\n          value: \"Double\",\n        },\n      },\n    };\n    return obj;\n  };\n\n  //preLabel is used for preceding the name like LongAxis || ShortAxis\n  _createCalcResult = (unit, label, value, preLabel = \"\") => {\n    var obj = this._createObject(\"unitOfMeasure\", unit);\n    Object.assign(obj, this._createDoubleDataType());\n    obj[\"xsi:type\"] = \"CompactCalculationResult\";\n    obj[\"dimensionCollection\"] = this._createDimension(preLabel + label);\n    obj[\"type\"] = \"Scalar\";\n    Object.assign(obj, this._createObject(\"value\", `${value}`));\n    return obj;\n  };\n\n  //if called with the default values returns DCM type code\n  _createTypeCode = (\n    code = \"11203\",\n    codeSystemName = \"DCM\",\n    displayNameValue = \"Attenuation Coefficient\"\n  ) => {\n    var obj = {};\n    obj[\"code\"] = code;\n    obj[\"codeSystemName\"] = codeSystemName;\n    obj[\"iso:displayName\"] = {\n      \"xmlns:iso\": \"uri:iso.org:21090\",\n      value: displayNameValue,\n    };\n    return obj;\n  };\n\n  createLengthCalcEntity = (length) => {\n    const { unit, value } = length;\n    const obj = {};\n    const uId = generateUid();\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"typeCode\"] = [this._createTypeCode(\"G-D7FE\", \"SRT\", \"Length\")];\n    obj[\"description\"] = { value: \"Length\" };\n    obj[\"calculationResultCollection\"] = {\n      CalculationResult: [this._createCalcResult(unit, \"LineLength\", value)],\n    };\n    this.imageAnnotations.ImageAnnotation[0].calculationEntityCollection[\n      \"CalculationEntity\"\n    ].push(obj);\n    return uId;\n  };\n\n  createLongAxisCalcEntity = (longAxis) => {\n    const { unit, value } = longAxis;\n    const obj = {};\n    const uId = generateUid();\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"typeCode\"] = [this._createTypeCode(\"G-A185\", \"SRT\", \"LongAxis\")];\n    obj[\"description\"] = { value: \"LongAxis\" };\n    obj[\"calculationResultCollection\"] = {\n      CalculationResult: [this._createCalcResult(unit, \"LongAxis\", value)],\n    };\n    this.imageAnnotations.ImageAnnotation[0].calculationEntityCollection[\n      \"CalculationEntity\"\n    ].push(obj);\n    return uId;\n  };\n\n  createShortAxisCalcEntity = (shortAxis) => {\n    const { unit, value } = shortAxis;\n    const obj = {};\n    const uId = generateUid();\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"typeCode\"] = [this._createTypeCode(\"G-A186\", \"SRT\", \"ShortAxis\")];\n    obj[\"description\"] = { value: \"ShortAxis\" };\n    obj[\"calculationResultCollection\"] = {\n      CalculationResult: [this._createCalcResult(unit, \"ShortAxis\", value)],\n    };\n    this.imageAnnotations.ImageAnnotation[0].calculationEntityCollection[\n      \"CalculationEntity\"\n    ].push(obj);\n    return uId;\n  };\n\n  createAreaCalcEntity = (area) => {\n    const { unit, value } = area;\n    const obj = {};\n    const uId = generateUid();\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"typeCode\"] = [this._createTypeCode(\"99EPADA4\", \"99EPAD\", \"Area\")];\n    obj[\"description\"] = { value: \"Area\" };\n    obj[\"calculationResultCollection\"] = {\n      CalculationResult: [this._createCalcResult(unit, \"Area\", value)],\n    };\n    this.imageAnnotations.ImageAnnotation[0].calculationEntityCollection[\n      \"CalculationEntity\"\n    ].push(obj);\n    return uId;\n  };\n\n  createVolumeCalcEntity = (volume) => {\n    const { unit, value } = volume;\n    const obj = {};\n    const uId = generateUid();\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"typeCode\"] = [this._createTypeCode(\"RID28668\", \"Radlex\", \"Volume\")];\n    obj[\"description\"] = { value: \"Volume\" };\n    obj[\"calculationResultCollection\"] = {\n      CalculationResult: [this._createCalcResult(unit, \"Volume\", value)],\n    };\n    this.imageAnnotations.ImageAnnotation[0].calculationEntityCollection[\n      \"CalculationEntity\"\n    ].push(obj);\n    return uId;\n  };\n\n  createMeanCalcEntity = (value, preLabel) => {\n    let typeCodeDcm,\n      { unit, mean } = value;\n    ({ unit, typeCodeDcm } = this._getAimUnitAndDcmTypeCode(unit));\n    var obj = {};\n    const uId = generateUid();\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"typeCode\"] = [\n      typeCodeDcm,\n      this._createTypeCode(\"R-00317\", \"SRT\", \"Mean\"),\n    ];\n    obj[\"description\"] = { value: \"Mean\" };\n    obj[\"calculationResultCollection\"] = {\n      CalculationResult: [this._createCalcResult(unit, \"Mean\", mean, preLabel)],\n    };\n    this.imageAnnotations.ImageAnnotation[0].calculationEntityCollection.CalculationEntity.push(\n      obj\n    );\n    return uId;\n  };\n\n  createStdDevCalcEntity = (value, preLabel) => {\n    let typeCodeDcm,\n      { unit, stdDev } = value;\n    ({ unit, typeCodeDcm } = this._getAimUnitAndDcmTypeCode(unit));\n\n    var obj = {};\n    const uId = generateUid();\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"typeCode\"] = [\n      typeCodeDcm,\n      this._createTypeCode(\"R-10047\", \"SRT\", \"Standard Deviation\"),\n    ];\n    obj[\"description\"] = { value: \"Standard Deviation\" };\n    obj[\"calculationResultCollection\"] = {\n      CalculationResult: [\n        this._createCalcResult(unit, \"Standard Deviation\", stdDev, preLabel),\n      ],\n    };\n    this.imageAnnotations.ImageAnnotation[0].calculationEntityCollection[\n      \"CalculationEntity\"\n    ].push(obj);\n    return uId;\n  };\n\n  createMinCalcEntity = (value, preLabel) => {\n    let typeCodeDcm,\n      { unit, min } = value;\n    ({ unit, typeCodeDcm } = this._getAimUnitAndDcmTypeCode(unit));\n    var obj = {};\n    const uId = generateUid();\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"typeCode\"] = [\n      typeCodeDcm,\n      this._createTypeCode(\"R-404FB\", \"SRT\", \"Minimum\"),\n    ];\n    obj[\"description\"] = { value: \"Minimum\" };\n    obj[\"calculationResultCollection\"] = {\n      CalculationResult: [\n        this._createCalcResult(unit, \"Minimum\", min, preLabel),\n      ],\n    };\n    this.imageAnnotations.ImageAnnotation[0].calculationEntityCollection[\n      \"CalculationEntity\"\n    ].push(obj);\n    return uId;\n  };\n\n  createMaxCalcEntity = (value, preLabel) => {\n    let typeCodeDcm,\n      { unit, max } = value;\n    ({ unit, typeCodeDcm } = this._getAimUnitAndDcmTypeCode(unit));\n    var obj = {};\n    const uId = generateUid();\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"typeCode\"] = [\n      typeCodeDcm,\n      this._createTypeCode(\"G-A437\", \"SRT\", \"Maximum\"),\n    ];\n    obj[\"description\"] = { value: \"Maximum\" };\n    obj[\"calculationResultCollection\"] = {\n      CalculationResult: [\n        this._createCalcResult(unit, \"Maximum\", max, preLabel),\n      ],\n    };\n    this.imageAnnotations.ImageAnnotation[0].calculationEntityCollection[\n      \"CalculationEntity\"\n    ].push(obj);\n    return uId;\n  };\n\n  _getAimUnitAndDcmTypeCode = (unit) => {\n    if (unit === \"hu\")\n      return { unit: \"[hnsf'U]\", typeCodeDcm: this._createTypeCode() };\n    else if (unit === \"suv\")\n      return {\n        unit: \"{SUVbw}g/ml\",\n        typeCodeDcm: this._createTypeCode(126401, \"DCM\", \"SUVbw\"),\n      };\n    return { unit, typeCodeDcm: this._createTypeCode() };\n  };\n\n  createCommonCalcEntites = (mean, stdDev, min, max, preLabel) => {\n    var entities = [];\n    entities.push(this.createMeanCalcEntity(mean, preLabel));\n    entities.push(this.createStdDevCalcEntity(stdDev, preLabel));\n    entities.push(this.createMinCalcEntity(min, preLabel));\n    entities.push(this.createMaxCalcEntity(max, preLabel));\n    return entities;\n  };\n\n  // createLineCalcEntities = (length, mean, stdDev, min, max) => {\n  //   var entities = [];\n  //   entities.push(this.createLengthCalcEntity(length));\n  //   return entities.concat(\n  //     this.createCommonCalcEntites(mean, stdDev, min, max)\n  //   );\n  // };\n\n  createLongAxisCalcEntities = (longAxis, mean, stdDev, min, max) => {\n    var entities = [];\n    entities.push(this.createLongAxisCalcEntity(longAxis));\n    return entities.concat(\n      this.createCommonCalcEntites(mean, stdDev, min, max, \"LongAxis_\")\n    );\n  };\n\n  createShortAxisCalcEntities = (shortAxis, mean, stdDev, min, max) => {\n    var entities = [];\n    entities.push(this.createShortAxisCalcEntity(shortAxis));\n    return entities.concat(\n      this.createCommonCalcEntites(mean, stdDev, min, max, \"ShortAxis_\")\n    );\n  };\n\n  createCalculationEntityCollection = (entities) => {\n    var obj = {};\n    obj[\"calculationEntityCollection\"] = { CalculationEntity: entities };\n    return obj;\n  };\n\n  /*                                          */\n  /*  Markup Entitiy Realted Functions        */\n  /*                                          */\n\n  _createCoordinate = (coordinate, index) => {\n    var obj = {};\n    obj[\"coordinateIndex\"] = { value: index };\n    obj[\"x\"] = { value: coordinate.x };\n    obj[\"y\"] = { value: coordinate.y };\n    return obj;\n  };\n\n  _createCoordinateArray = (points) => {\n    var coordinates = [];\n    points.forEach((point, index) => {\n      coordinates.push(this._createCoordinate(point, index));\n    });\n    return coordinates;\n  };\n\n  addMarkupEntity = (type, shapeIndex, points, imageUid, frameNum, lineStyle) => {\n    if (!this.imageAnnotations.ImageAnnotation[0][\"markupEntityCollection\"])\n      this.imageAnnotations.ImageAnnotation[0][\"markupEntityCollection\"] = { MarkupEntity: [] };\n    var obj = {};\n    obj[\"includeFlag\"] = { value: true };\n    obj[\"twoDimensionSpatialCoordinateCollection\"] = {\n      TwoDimensionSpatialCoordinate: this._createCoordinateArray(points),\n    };\n    const uId = generateUid();\n    obj[\"xsi:type\"] = type;\n\n    this.imageAnnotations.ImageAnnotation[0].markupEntityCollection.MarkupEntity.push(\n      obj\n    );\n    obj[\"uniqueIdentifier\"] = { root: uId };\n    obj[\"shapeIdentifier\"] = { value: shapeIndex };\n    obj[\"includeFlag\"] = { value: true };\n    obj[\"imageReferenceUid\"] = { root: imageUid };\n    obj[\"referencedFrameNumber\"] = { value: frameNum };\n    if (lineStyle) {\n      obj[\"lineStyle\"] = { value: lineStyle };\n    }\n    obj[\"twoDimensionSpatialCoordinateCollection\"] = {\n      TwoDimensionSpatialCoordinate: this._createCoordinateArray(points),\n    };\n    return uId;\n  };\n\n  /*                                          */\n  /*  Image Refrence Entity Collection        */\n  /*                                          */\n  _createModality = () => {\n    if (this.temp.aimType !== enumAimType.studyAnnotation) {\n      const sopClassUid = this.temp.image[0].sopClassUid;\n      if (sopClassUid && modalities[sopClassUid])\n        var {\n          codeValue,\n          codingSchemeDesignator,\n          codeMeaning,\n          codingSchemeVersion,\n        } = modalities[sopClassUid];\n      else {\n        const modality = this.temp.series.modality;\n        if (modality && modalities[modality]) {\n          var {\n            codeValue,\n            codingSchemeDesignator,\n            codeMeaning,\n            codingSchemeVersion,\n          } = modalities[modality];\n        }\n      }\n    }\n    else { //Study annotation\n      const modality = this.temp.study.modality;\n      if (modality && modalities[modality]) {\n        var {\n          codeValue,\n          codingSchemeDesignator,\n          codeMeaning,\n          codingSchemeVersion,\n        } = modalities[modality];\n      }\n    }\n    var obj = {};\n    obj[\"code\"] = codeValue || \"\";\n    obj[\"codeSystemName\"] = codingSchemeDesignator || \"\";\n    obj[\"iso:displayName\"] = {\n      \"xmlns:iso\": \"uri:iso.org:21090\",\n      value: codeMeaning || \"\",\n    };\n    obj[\"codeSystemVersion\"] = codingSchemeVersion || \"\";\n    return obj;\n  };\n\n  _createImageCollection = () => {\n    let obj = {};\n    obj[\"Image\"] = [];\n    this.temp.image.forEach((image) => {\n      let { sopClassUid, sopInstanceUid } = image;\n      if (this.temp.aimType === enumAimType.imageAnnotation) {\n        sopClassUid = { root: sopClassUid };\n        sopInstanceUid = { root: sopInstanceUid };\n      }\n      else {\n        sopClassUid = { root: \"\" };\n        sopInstanceUid = { root: \"\" };\n      }\n      obj[\"Image\"].push({ sopClassUid, sopInstanceUid });\n    });\n    return obj;\n  };\n\n  _createImageSeries = () => {\n    var obj = {};\n    // Study Annotation\n    if (this.temp.aimType === enumAimType.studyAnnotation) {\n      obj[\"instanceUid\"] = { root: \"\" };\n    }\n    else obj[\"instanceUid\"] = { root: this.temp.series.instanceUid };\n    obj[\"modality\"] = this._createModality();\n    obj[\"imageCollection\"] = this._createImageCollection();\n    return obj;\n  };\n\n  _createImageStudy = () => {\n    const {\n      accessionNumber,\n      startTime,\n      instanceUid,\n      startDate,\n    } = this.temp.study;\n    var obj = {};\n    obj[\"instanceUid\"] = { root: instanceUid };\n    obj[\"startDate\"] = { value: startDate };\n    obj[\"startTime\"] = { value: startTime };\n    obj[\"accessionNumber\"] = { value: accessionNumber };\n    obj[\"imageSeries\"] = this._createImageSeries();\n    return obj;\n  };\n\n  _createImageReferenceEntity = () => {\n    var obj = {};\n    obj[\"xsi:type\"] = \"DicomImageReferenceEntity\";\n    obj[\"uniqueIdentifier\"] = { root: generateUid() };\n    obj[\"imageStudy\"] = this._createImageStudy();\n    return obj;\n  };\n\n  _createImageReferanceEntityCollection = () => {\n    var obj = {};\n    obj[\"ImageReferenceEntity\"] = [this._createImageReferenceEntity()];\n    return obj;\n  };\n\n  //\n  //\n  //\n  _createImageAnnotations = () => {\n    const {\n      name,\n      comment,\n      typeCode,\n      imagingPhysicalEntityCollection,\n      imagingObservationEntityCollection,\n      inferenceEntityCollection,\n      trackingUId\n    } = this.temp.aim;\n    var obj = {};\n    obj[\"uniqueIdentifier\"] = { root: generateUid() };\n    obj[\"trackingUniqueIdentifier\"] = { root: trackingUId };\n    obj[\"typeCode\"] = typeCode;\n    obj[\"dateTime\"] = { value: this.getDate() };\n    obj[\"name\"] = name;\n    obj[\"comment\"] = this._getComment(comment);\n    obj[\"precedentReferencedAnnotationUid\"] = { root: \"\" };\n    if (imagingPhysicalEntityCollection)\n      obj[\"imagingPhysicalEntityCollection\"] = imagingPhysicalEntityCollection;\n    if (this.temp.aimType === enumAimType.imageAnnotation) {\n\n      //if this is an image annotation\n      obj[\"calculationEntityCollection\"] = { \"CalculationEntity\": [] };\n      obj[\"imageAnnotationStatementCollection\"] = {\n        ImageAnnotationStatement: [],\n      };\n    }\n    if (imagingObservationEntityCollection)\n      obj[\n        \"imagingObservationEntityCollection\"\n      ] = imagingObservationEntityCollection;\n    if (inferenceEntityCollection)\n      obj[\"inferenceEntityCollection\"] = inferenceEntityCollection;\n    obj[\n      \"imageReferenceEntityCollection\"\n    ] = this._createImageReferanceEntityCollection();\n    return obj;\n  };\n\n  // sanity check to prevent failing for empty comment, but why do I have to send an object with .value?\n  _getComment = (comment) => {\n    if (comment && comment.value) {\n      if (comment.value.length)\n        comment.value = this._getProgrammedComment().concat(\n          \"~~\",\n          comment.value\n        );\n    } else comment.value = this._getProgrammedComment();\n    return comment;\n  };\n\n  _getProgrammedComment = () => {\n    const SEPERATOR = \" / \";\n    let { modality, description, instanceNumber, number } = this.temp.series;\n    if (this.temp.aimType !== enumAimType.imageAnnotation) {\n      instanceNumber = \"\"\n    }\n    if (this.temp.aimType === enumAimType.studyAnnotation) {\n      modality = \"\";\n    }\n    const comment =\n      modality +\n      SEPERATOR +\n      description +\n      SEPERATOR +\n      instanceNumber +\n      SEPERATOR +\n      number;\n    return comment;\n  };\n\n  createImageAnnotationStatement = (referenceType, objectId, subjectId) => {\n    //this is called externally\n    var obj = {};\n    var references;\n    referenceType === 1\n      ? (references = \"CalculationEntityReferencesMarkupEntityStatement\")\n      : (references = \"CalculationEntityReferencesSegmentationEntityStatement\");\n    obj[\"xsi:type\"] = references;\n    obj[\"subjectUniqueIdentifier\"] = { root: subjectId };\n    obj[\"objectUniqueIdentifier\"] = { root: objectId };\n    this.imageAnnotations.ImageAnnotation[0].imageAnnotationStatementCollection.ImageAnnotationStatement.push(\n      obj\n    );\n  };\n\n  // createImageAnnotationStatementCollection = () => {\n  //   var obj = {};\n  //   obj[\"ImageAnnotationStatement\"] = [];\n  //   return obj;\n  // };\n\n  // //\n  // //\n  // // Image Annotations\n  // createImageAnnotation = (annotationStatementCollection = {}) => {\n  //   var obj = {};\n  //   obj[\"dateTime\"] = { value: this.getDate() };\n  //   obj[\n  //     \"imageAnnotationStatementCollection\"\n  //   ] = this.createImageAnnotationStatementCollection();\n  //   return obj;\n  // };\n\n  // createImageAnnotations = imageAnnotation => {\n  //   var obj = {};\n  //   obj[\"imageAnnotations\"] = imageAnnotation;\n  //   return obj;\n  // };\n\n  /*                                                */\n  /*    Segmentation Entitiy Realted Functions      */\n  /*                                                */\n\n  createSegmentationEntity = (segmentation) => {\n    var obj = {};\n    obj[\"referencedSopInstanceUid\"] = {\n      root: segmentation.referencedSopInstanceUid,\n    };\n    obj[\"segmentNumber\"] = { value: 1 };\n    obj[\"seriesInstanceUid\"] = {\n      root: segmentation.seriesInstanceUid,\n    };\n    obj[\"studyInstanceUid\"] = {\n      root: segmentation.studyInstanceUid,\n    };\n    obj[\"xsi:type\"] = \"DicomSegmentationEntity\";\n    obj[\"sopClassUid\"] = { root: \"1.2.840.10008.5.1.4.1.1.66.4\" };\n    obj[\"sopInstanceUid\"] = { root: segmentation.sopInstanceUid };\n    obj[\"uniqueIdentifier\"] = { root: generateUid() };\n    const imageAnnotation = this.imageAnnotations.ImageAnnotation[0];\n    if (!imageAnnotation.segmentationEntityCollection) {\n      imageAnnotation.segmentationEntityCollection = {};\n      imageAnnotation.segmentationEntityCollection.SegmentationEntity = [];\n    }\n    imageAnnotation.segmentationEntityCollection.SegmentationEntity.push(obj);\n    return obj[\"uniqueIdentifier\"];\n  };\n\n  //\n  //\n  // Person\n  _createPerson = (person) => {\n    const { sex, name, patientId, birthDate } = person;\n    return {\n      name: { value: name },\n      id: { value: patientId },\n      birthDate: { value: birthDate },\n      sex: { value: sex },\n    };\n  };\n\n  //\n  //\n  // Eqipment\n  _createEquipment = (equipment) => {\n    const {\n      manufacturerName,\n      manufacturerModelName,\n      softwareVersion,\n    } = equipment;\n    return {\n      manufacturerName: { value: manufacturerName },\n      manufacturerModelName: { value: manufacturerModelName },\n      softwareVersion: { value: softwareVersion },\n    };\n  };\n\n  //\n  //\n  // User\n  _createUser = (user) => {\n    const { name, loginName } = user;\n    return {\n      name: { value: name },\n      loginName: { value: loginName }\n    };\n  };\n\n  getAim = () => {\n    const temp = this[\"temp\"];\n    delete this[\"temp\"];\n    const stringAim = JSON.stringify(this);\n    const wrappedAim = `{\"ImageAnnotationCollection\": ${stringAim} } `;\n    this[\"temp\"] = temp;\n    return wrappedAim;\n  };\n\n  // new method to get the aim json\n  getAimJSON = () => {\n    return JSON.parse(this.getAim());\n  };\n\n  getType = () => {\n    return this.temp.aimType;\n  }\n}\n\nexport default Aim;\n","import Aim from \"./Aim.jsx\";\nexport { Aim };\n\n// moved from aimEditor.jsx\nexport const enumAimType = {\n  imageAnnotation: 1,\n  seriesAnnotation: 2,\n  studyAnnotation: 3,\n};\n\nexport function getImageIdAnnotations(aims) {\n  let imageIdSpecificMarkups = {};\n  try {\n    aims.forEach((aim) => parseAim(aim, imageIdSpecificMarkups));\n  } catch (err) {\n    console.error(\"Preparing ImageIdAnnotations\", err);\n  }\n  return imageIdSpecificMarkups;\n}\n\nfunction parseAim(aim, imageIdSpecificMarkups) {\n  var imageAnnotation =\n    aim.ImageAnnotationCollection.imageAnnotations.ImageAnnotation[0];\n  if (\n    (!imageAnnotation.markupEntityCollection ||\n      imageAnnotation.markupEntityCollection.MarkupEntity.length === 0) &&\n    (!imageAnnotation.segmentationEntityCollection ||\n      imageAnnotation.segmentationEntityCollection.SegmentationEntity.length ===\n        0)\n  ) {\n    const series =\n      imageAnnotation.imageReferenceEntityCollection.ImageReferenceEntity[0]\n        .imageStudy.imageSeries;\n    imageIdSpecificMarkups[\n      series.imageCollection.Image[0].sopInstanceUid.root\n    ] = [{ aimUid: aim.ImageAnnotationCollection.uniqueIdentifier.root }];\n  }\n\n  //check if the aim has markup\n  if (imageAnnotation.markupEntityCollection) {\n    var markupEntities = imageAnnotation.markupEntityCollection.MarkupEntity;\n    markupEntities.forEach((markupEntity) => {\n      const { imageId, data } = getMarkup(markupEntity, aim);\n      if (!imageIdSpecificMarkups[imageId])\n        imageIdSpecificMarkups[imageId] = [data];\n      else imageIdSpecificMarkups[imageId].push(data);\n    });\n  }\n  //check if it has segmentation\n  if (imageAnnotation.segmentationEntityCollection) {\n    var segmentationEntities =\n      imageAnnotation.segmentationEntityCollection.SegmentationEntity;\n    segmentationEntities.forEach((segmentationEntity) => {\n      const { imageId, data } = getSegmentation(segmentationEntity, aim);\n      if (!imageIdSpecificMarkups[imageId])\n        imageIdSpecificMarkups[imageId] = [data];\n      else imageIdSpecificMarkups[imageId].push(data);\n    });\n  }\n}\n\nfunction getMarkup(markupEntity, aim) {\n  let data = {};\n  data[\"markupType\"]=markupEntity[\"xsi:type\"];\n  let imageId = markupEntity[\"imageReferenceUid\"][\"root\"];\n  const frameNumber = markupEntity[\"referencedFrameNumber\"]\n    ? markupEntity[\"referencedFrameNumber\"][\"value\"]\n    : 1;\n  // if (frameNumber > -1) imageId = imageId + \"&frame=\" + frameNumber; //if multiframe reconstruct the imageId\n  imageId = imageId + \"&frame=\" + frameNumber;\n  const markupUid = markupEntity[\"uniqueIdentifier\"][\"root\"];\n  data[\"markupUid\"] = markupUid;\n\n  let calculations = [];\n  try {\n    calculations = getCalculationEntitiesOfMarkUp(aim, markupUid);\n  } catch (error) {\n    console.error(\"Can not get calculations\", error);\n  }\n  if(calculations.length)\n    data[\"calculations\"] = calculations;\n\n\n  data[\"coordinates\"] = markupEntity.twoDimensionSpatialCoordinateCollection.TwoDimensionSpatialCoordinate;\n\n  const aimUid = aim.ImageAnnotationCollection[\"uniqueIdentifier\"][\"root\"];\n  data[\"aimUid\"] =  aimUid;\n  const color = markupEntity?.lineColor?.value;\n  data[\"color\"] = color;\n  \n  if(markupEntity[\"lineStyle\"])\n    data[\"lineStyle\"] = markupEntity[\"lineStyle\"];\n\n  let retData = {\n    imageId,\n    data\n  };\n\n  if (color) retData.data[\"color\"] = color;\n  return retData;\n}\n\nfunction getSegmentation(segmentationEntity, aim) {\n  const imageId = segmentationEntity[\"referencedSopInstanceUid\"][\"root\"];\n  const markupUid = segmentationEntity[\"uniqueIdentifier\"][\"root\"];\n  let calculations = [];\n  try {\n    calculations = getCalculationEntitiesOfMarkUp(aim, markupUid);\n  } catch (error) {\n    console.error(\"Can not get calculations\", error);\n  }\n  const aimUid = aim.ImageAnnotationCollection[\"uniqueIdentifier\"][\"root\"];\n  return {\n    imageId,\n    data: {\n      markupType: segmentationEntity[\"xsi:type\"],\n      calculations,\n      markupUid,\n      aimUid,\n    },\n  };\n}\n\nfunction getCalculationEntitiesOfMarkUp(aim, markupUid) {\n  const imageAnnotationStatements = getImageAnnotationStatements(aim);\n  let calculations = [];\n  imageAnnotationStatements.forEach((statement) => {\n    if (statement.objectUniqueIdentifier.root === markupUid) {\n      const calculationUid = statement.subjectUniqueIdentifier.root;\n      const calculationEntities = getCalculationEntities(aim);\n      calculationEntities.forEach((calculation) => {\n        if (calculation.uniqueIdentifier.root === calculationUid)\n          calculations.push(parseCalculation(calculation));\n      });\n    }\n  });\n  return calculations;\n}\n\nfunction getImageAnnotationStatements(aim) {\n  return aim.ImageAnnotationCollection.imageAnnotations.ImageAnnotation[0]\n    .imageAnnotationStatementCollection\n    ? aim.ImageAnnotationCollection.imageAnnotations.ImageAnnotation[0]\n        .imageAnnotationStatementCollection.ImageAnnotationStatement\n    : [];\n}\n\nfunction getCalculationEntities(aim) {\n  return aim.ImageAnnotationCollection.imageAnnotations.ImageAnnotation[0]\n    .calculationEntityCollection.CalculationEntity;\n}\n\nfunction parseCalculation(calculation) {\n  var obj = {};\n  const calcResult =\n    calculation.calculationResultCollection.CalculationResult[0];\n  if (\n    calculation.calculationResultCollection.CalculationResult[0]\n      .calculationDataCollection\n  ) {\n    const calcValue =\n      calculation.calculationResultCollection.CalculationResult[0]\n        .calculationDataCollection.CalculationData[0];\n    obj[\"value\"] = calcValue[\"value\"][\"value\"];\n  } else obj[\"value\"] = calcResult[\"value\"][\"value\"];\n  obj[\"type\"] = calculation[\"description\"][\"value\"];\n  obj[\"unit\"] = calcResult[\"unitOfMeasure\"][\"value\"];\n  return obj;\n}\n\nexport function getAimImageData(image) {\n  var obj = {};\n  obj.aim = {};\n  obj.study = {};\n  obj.series = {};\n  obj.equipment = {};\n  obj.person = {};\n  obj.image = [];\n  const { aim, study, series, equipment, person } = obj;\n\n  aim.studyInstanceUid = image.data?.string(\"x0020000d\") || image.metadata.x0020000d || \"\";\n\n  study.startTime = image.data?.string(\"x00080030\") || image.metadata?.x00080030 || \"\";\n  study.instanceUid = image.data?.string(\"x0020000d\") || image.metadata?.x0020000d || \"\";\n  study.startDate = image.data?.string(\"x00080020\") || image.metadata?.x00080020 || \"\";\n  study.accessionNumber = image.data?.string(\"x00080050\") || image.metadata?.x00080050 || \"\";\n\n  series.instanceUid = image.data?.string(\"x0020000e\") || image.metadata?.x0020000e || \"\";\n  series.modality = image.data?.string(\"x00080060\") || image.metadata?.x00080060 || \"\";\n  series.number = image.data?.string(\"x00200011\") || image.metadata?.x00200011 || \"\";\n  series.description = image.data?.string(\"x0008103e\") || image.metadata?.x0008103e || \"\";\n  series.instanceNumber = image.data?.string(\"x00200013\") || image.metadata?.x00200013 ||  \"\";\n\n  obj.image.push(getSingleImageData(image));\n\n  equipment.manufacturerName = image.data?.string(\"x00080070\") || image.metadata?.x00080070 || \"\";\n  equipment.manufacturerModelName = image.data?.string(\"x00081090\") ||  image.metadata?.x00081090 || \"\";\n  equipment.softwareVersion = image.data?.string(\"x00181020\") || image.metadata?.x00181020 || \"\";\n\n  person.sex = image.data?.string(\"x00100040\") || image.metadata?.x00100040 || \"\";\n  person.name = image.data?.string(\"x00100010\") || image.metadata?.x00100010 || \"\";\n  person.patientId = image.data?.string(\"x00100020\") || image.metadata?.x00100020 || \"\";\n  person.birthDate = image.data?.string(\"x00100030\") || image.metadata?.x00100030 || \"\";\n\n  return obj;\n}\n\nexport function getStudyAimData(study) {\n  var obj = {};\n  obj.aim = {};\n  obj.study = {};\n  obj.series = {};\n  obj.equipment = {};\n  obj.person = {};\n  obj.image = [];\n  const { aim, study: _study, series, equipment, person, image } = obj;\n  const {\n    studyUID,\n    studyTime,\n    studyDate,\n    studyAccessionNumber,\n    sex,\n    patientName,\n    patientID,\n    birthdate,\n    examTypes,\n  } = study;\n\n  aim.studyInstanceUid = studyUID || \"\";\n\n  _study.startTime = studyTime || \"\";\n  _study.instanceUid = studyUID || \"\";\n  _study.startDate = studyDate || \"\";\n  _study.accessionNumber = studyAccessionNumber || \"\";\n  _study.modality = getStudyModalityFromExamTypes(examTypes) || \"\";\n\n  series.instanceUid = \"\";\n  series.modality = \"\";\n  series.number = \"\";\n  series.description = \"\";\n  series.instanceNumber = \"\";\n\n  image.push({\n    sopClassUid: \"\",\n    sopInstanceUid: \"\",\n  });\n\n  equipment.manufacturerName = \"\";\n  equipment.manufacturerModelName = \"\";\n  equipment.softwareVersion = \"\";\n\n  person.sex = sex || \"\";\n  person.name = patientName || \"\";\n  person.patientId = patientID || \"\";\n  person.birthDate = birthdate || \"\";\n\n  return obj;\n}\n\nexport function addSemanticAnswersToAimData(answers, aimData) {\n  const {\n    name,\n    comment,\n    imagingPhysicalEntityCollection,\n    imagingObservationEntityCollection,\n    inferenceEntity,\n    typeCode,\n  } = answers;\n  aimData.aim.name = name;\n  if (comment) aimData.aim.comment = comment;\n  if (imagingPhysicalEntityCollection)\n    aimData.aim.imagingPhysicalEntityCollection =\n      imagingPhysicalEntityCollection;\n  if (imagingObservationEntityCollection)\n    aimData.aim.imagingObservationEntityCollection =\n      imagingObservationEntityCollection;\n  if (inferenceEntity) aimData.aim.inferenceEntity = inferenceEntity;\n  if (typeCode) aimData.aim.typeCode = typeCode;\n}\n\nexport function addUserToAimData({ name, loginName }, aimData) {\n aimData.user = {name, loginName};\n}\n\nfunction getSingleImageData(image) {\n  return {\n    sopClassUid: image.data?.string(\"x00080016\") || image.metadata?.x00080016|| \"\",\n    sopInstanceUid: image.data?.string(\"x00080018\") || image.metadata?.x00080018 || \"\",\n  };\n}\n\nfunction addSingleImageDataToAim(aim, image) {\n  if (!aim.image) return;\n  aim.image.push(getSingleImageData(image));\n}\n\nexport const getStudyModalityFromExamTypes = (examTypes) => {\n  console.log(\"Exam types\", examTypes);\n  // remove SEG from examTypes\n  var index = examTypes.indexOf(\"SEG\");\n  if (index > -1) {\n    examTypes.splice(index, 1);\n  }\n  if (!examTypes.length) { console.log(\"Returning empty\"); return \"\"};\n  if (examTypes.length === 1) {console.log(\"Returning \", examTypes[0]);return examTypes[0]};\n  if (examTypes.includes(\"CT\")) {\n    if(examTypes.includes(\"PT\")) return \"PET-CT\";\n    else return \"CT\";\n  }  \n  if (examTypes.includes(\"MR\")){\n    if(examTypes.includes(\"PT\"))return \"PET-MR\";\n    else return \"MR\";\n  } \n  if (examTypes.includes(\"US\") && examTypes.includes(\"RF\"))\n    return \"US-RF\";\n  console.log(\"Returning default value\");\n  return {\n    code: \"99EPADM0\",\n    codeSystemName: \"99EPAD\",\n    \"iso:displayName\": {\n      \"xmlns:iso\": \"uri:iso.org:21090\",\n      value: \"NA\",\n    },\n  };\n};\n\n// ---------- aimapi additional methods --------\n// new method inspired by createAimSegmentation in aimEditor.jsx\nexport function createOfflineAimSegmentation(segmentation, userInfo) {\n  // prapare the seed data and create aim\n  const seedData = getAimImageDataFromSeg(segmentation); //aimhelper\n  // admin/ upload user\n  addUserToSeedData(seedData, userInfo);\n  const aim = new Aim(seedData, enumAimType.imageAnnotation); // no this.updatedAimId.\n  // let dataset = await getDatasetFromBlob(segmentation);\n  // if update segmentation Uid should be same as the previous one\n  // console.log('Dataset series uid', segmentation);\n  // fill the segmentation related aim parts\n  const segEntityData = getSegmentationEntityDataFromSeg(segmentation);\n  // TODO fill in stats\n  addSegmentationToAim(aim, segEntityData, {});\n  // console.log('AIM in segmentation', aim);\n  // remove extra entities\n  delete aim.imageAnnotations.ImageAnnotation[0].calculationEntityCollection;\n  delete aim.imageAnnotations.ImageAnnotation[0].markupEntityCollection;\n  delete aim.imageAnnotations.ImageAnnotation[0]\n    .imageAnnotationStatementCollection;\n\n  // get the segment sequence as an array. we are going to use the first one for aim anyway\n  // TODO what to do for multi-segment if there is no series description\n  if (segmentation.SegmentSequence.constructor.name !== \"Array\") {\n    segmentation.SegmentSequence = [segmentation.SegmentSequence];\n  }\n\n  // add name, comment and segmentation\n  aim.imageAnnotations.ImageAnnotation[0].name = {\n    value:\n      segmentation.SeriesDescription ||\n      segmentation.SegmentSequence[0].SegmentLabel,\n  };\n  // TODO there is no way to fill programmed comment without opening the source image\n  aim.imageAnnotations.ImageAnnotation[0].comment = { value: \"\" };\n  aim.imageAnnotations.ImageAnnotation[0].typeCode = [\n    {\n      code: \"SEG\",\n      codeSystemName: \"99EPAD\",\n      \"iso:displayName\": {\n        \"xmlns:iso\": \"uri:iso.org:21090\",\n        value: \"SEG Only\",\n      },\n    },\n  ];\n\n  return { aim };\n}\n// moved from aimEditor.jsx\nfunction addUserToSeedData(seedData, userInfo) {\n  // this is ui specific, should be changed\n  if (userInfo) {\n    seedData.user = userInfo;\n  } else {\n    let obj = {};\n    obj.loginName = sessionStorage.getItem(\"username\");\n    obj.name = sessionStorage.getItem(\"displayName\");\n    seedData.user = obj;\n  }\n}\n// moved from aimEditor.jsx\nfunction getDatasetFromBlob(segBlob, imageIdx) {\n  return new Promise((resolve) => {\n    let segArrayBuffer;\n    var fileReader = new FileReader();\n    fileReader.onload = (event) => {\n      segArrayBuffer = event.target.result;\n      const dicomData = dcmjs.data.DicomMessage.readFile(segArrayBuffer);\n      const dataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\n        dicomData.dict\n      );\n      dataset._meta = dcmjs.data.DicomMetaDictionary.namifyDataset(\n        dicomData.meta\n      );\n      resolve(dataset);\n    };\n    fileReader.readAsArrayBuffer(segBlob);\n  });\n}\n// moved from aimEditor.jsx\nfunction addSegmentationToAim(aim, segEntityData, segStats) {\n  const segId = aim.createSegmentationEntity(segEntityData);\n  const { volume, min, max, mean, stdDev } = segStats;\n  if (mean) {\n    const meanId = aim.createMeanCalcEntity({ mean, unit: \"[hnsf'U]\" });\n    aim.createImageAnnotationStatement(2, segId, meanId);\n  }\n  if (stdDev) {\n    const stdDevId = aim.createStdDevCalcEntity({ stdDev, unit: \"[hnsf'U]\" });\n    aim.createImageAnnotationStatement(2, segId, stdDevId);\n  }\n  if (min) {\n    const minId = aim.createMinCalcEntity({ min, unit: \"[hnsf'U]\" });\n    aim.createImageAnnotationStatement(2, segId, minId);\n  }\n  if (max) {\n    const maxId = aim.createMaxCalcEntity({ max, unit: \"[hnsf'U]\" });\n    aim.createImageAnnotationStatement(2, segId, maxId);\n  }\n  if (volume) {\n    const volumeId = aim.createMaxCalcEntity({ volume, unit: \"mm3\" });\n    aim.createImageAnnotationStatement(2, segId, volumeId);\n  }\n}\n// new method inspired by moved getSegmentationEntityData from aimEditor.jsx\nfunction getSegmentationEntityDataFromSeg(dataset) {\n  const refImage = getRefImageFromSeg(dataset);\n  let obj = {};\n  obj[\"referencedSopInstanceUid\"] = refImage.ReferencedSOPInstanceUID;\n  obj[\"seriesInstanceUid\"] = dataset.SeriesInstanceUID;\n  obj[\"studyInstanceUid\"] = dataset.StudyInstanceUID;\n  obj[\"sopClassUid\"] = dataset.SOPClassUID;\n  obj[\"sopInstanceUid\"] = dataset.SOPInstanceUID;\n  return obj;\n}\n// new method to populate image data from segmentation dicom image\nfunction getAimImageDataFromSeg(image) {\n  var obj = {};\n  obj.aim = {};\n  obj.study = {};\n  obj.series = {};\n  obj.equipment = {};\n  obj.person = {};\n  obj.image = [];\n  const { aim, study, series, equipment, person } = obj;\n  // seg data is coming in dcmjs format\n  aim.studyInstanceUid = image.StudyInstanceUID || \"\";\n  aim.comment = { value: \"\" };\n  study.startTime = image.StudyTime || \"\";\n  study.instanceUid = image.StudyInstanceUID || \"\";\n  study.startDate = image.StudyDate || \"\";\n  study.accessionNumber = image.AccessionNumber || \"\";\n  series.instanceUid = image.ReferencedSeriesSequence.SeriesInstanceUID || \"\";\n  obj.image.push(getSingleImageDataFromSeg(image));\n  equipment.manufacturerName = image.Manufacturer || \"\";\n  equipment.manufacturerModelName = image.ManufacturerModelName || \"\";\n  equipment.softwareVersion = image.SoftwareVersions || \"\";\n  person.sex = image.PatientSex || \"\";\n  person.name = image.PatientName || \"\";\n  person.patientId = image.PatientID || \"\";\n  person.birthDate = image.PatientBirthDate || \"\";\n  return obj;\n}\nfunction getRefImageFromSeg(dataset) {\n  // I needed to check if the sequence is array in each step as dcmjs makes it an object if there is only one item\n  let refImage = \"\";\n  const firstFrame = Array.isArray(dataset.PerFrameFunctionalGroupsSequence)\n    ? dataset.PerFrameFunctionalGroupsSequence[0]\n    : dataset.PerFrameFunctionalGroupsSequence;\n  if (firstFrame.DerivationImageSequence) {\n    const derivation = Array.isArray(firstFrame.DerivationImageSequence)\n      ? firstFrame.DerivationImageSequence[0]\n      : firstFrame.DerivationImageSequence;\n    refImage = Array.isArray(derivation.SourceImageSequence)\n      ? derivation.SourceImageSequence[0]\n      : derivation.SourceImageSequence;\n  } else if (dataset.ReferencedSeriesSequence) {\n    const refSeries = Array.isArray(dataset.ReferencedSeriesSequence)\n      ? dataset.ReferencedSeriesSequence[0]\n      : dataset.ReferencedSeriesSequence;\n    refImage = Array.isArray(refSeries.ReferencedInstanceSequence)\n      ? refSeries.ReferencedInstanceSequence[0]\n      : refSeries.ReferencedInstanceSequence;\n  }\n  return refImage;\n}\n\n// new method inspired by getSingleImageData to get data from segmentations\nfunction getSingleImageDataFromSeg(image) {\n  const refImage = getRefImageFromSeg(image);\n  return {\n    sopClassUid: refImage.ReferencedSOPClassUID || \"\",\n    sopInstanceUid: refImage.ReferencedSOPInstanceUID || \"\",\n  };\n}\n"],"names":["aimVersion","xmlns","dcmDesignator","lexVersion","modalities","codeValue","codeMeaning","codingSchemeDesignator","codingSchemeVersion","CT","CR","DX","PT","MR","US","MG","generateUid","uid","Math","floor","random","index","Aim","constructor","data","aimType","updatedAimId","trackingUId","now","Date","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","name","value","obj","label","size","Dimension","Object","assign","_createObject","dataType","code","codeSystem","unit","preLabel","_createDoubleDataType","_createDimension","codeSystemName","displayNameValue","length","uId","root","_createTypeCode","CalculationResult","_createCalcResult","imageAnnotations","ImageAnnotation","calculationEntityCollection","push","longAxis","shortAxis","area","volume","typeCodeDcm","mean","_getAimUnitAndDcmTypeCode","CalculationEntity","stdDev","min","max","entities","createMeanCalcEntity","createStdDevCalcEntity","createMinCalcEntity","createMaxCalcEntity","createLongAxisCalcEntity","concat","createCommonCalcEntites","createShortAxisCalcEntity","coordinate","x","y","points","coordinates","forEach","point","_createCoordinate","type","shapeIndex","imageUid","frameNum","lineStyle","MarkupEntity","TwoDimensionSpatialCoordinate","_createCoordinateArray","markupEntityCollection","temp","enumAimType","studyAnnotation","sopClassUid","image","modality","series","study","sopInstanceUid","imageAnnotation","instanceUid","_createModality","_createImageCollection","accessionNumber","startTime","startDate","_createImageSeries","_createImageStudy","_createImageReferenceEntity","comment","typeCode","imagingPhysicalEntityCollection","imagingObservationEntityCollection","inferenceEntityCollection","aim","_getComment","ImageAnnotationStatement","_createImageReferanceEntityCollection","_getProgrammedComment","SEPERATOR","description","instanceNumber","number","referenceType","objectId","subjectId","references","imageAnnotationStatementCollection","segmentation","referencedSopInstanceUid","seriesInstanceUid","studyInstanceUid","segmentationEntityCollection","SegmentationEntity","person","sex","patientId","birthDate","id","equipment","manufacturerName","manufacturerModelName","softwareVersion","user","loginName","stringAim","JSON","stringify","wrappedAim","parse","getAim","aimData","answers","getAimImageData","getStudyAimData","addSemanticAnswersToAimData","aimConf","uniqueIdentifier","dateTime","_createEquipment","_createPerson","_createImageAnnotations","undefined","seriesAnnotation","getImageIdAnnotations","aims","imageIdSpecificMarkups","parseAim","err","console","error","ImageAnnotationCollection","imageReferenceEntityCollection","ImageReferenceEntity","imageStudy","imageSeries","imageCollection","Image","aimUid","markupEntities","markupEntity","imageId","getMarkup","segmentationEntities","segmentationEntity","getSegmentation","frameNumber","markupUid","calculations","getCalculationEntitiesOfMarkUp","twoDimensionSpatialCoordinateCollection","color","lineColor","retData","markupType","imageAnnotationStatements","getImageAnnotationStatements","statement","objectUniqueIdentifier","calculationUid","subjectUniqueIdentifier","calculationEntities","getCalculationEntities","calculation","parseCalculation","calcResult","calculationResultCollection","calculationDataCollection","calcValue","CalculationData","string","metadata","x0020000d","x00080030","x00080020","x00080050","x0020000e","x00080060","x00200011","x0008103e","x00200013","getSingleImageData","x00080070","x00081090","x00181020","x00100040","x00100010","x00100020","x00100030","_study","studyUID","studyTime","studyDate","studyAccessionNumber","patientName","patientID","birthdate","examTypes","getStudyModalityFromExamTypes","inferenceEntity","addUserToAimData","x00080016","x00080018","log","indexOf","splice","includes","createOfflineAimSegmentation","userInfo","seedData","getAimImageDataFromSeg","addUserToSeedData","segEntityData","getSegmentationEntityDataFromSeg","addSegmentationToAim","SegmentSequence","SeriesDescription","SegmentLabel","sessionStorage","getItem","segStats","segId","createSegmentationEntity","meanId","createImageAnnotationStatement","stdDevId","minId","maxId","volumeId","dataset","refImage","getRefImageFromSeg","ReferencedSOPInstanceUID","SeriesInstanceUID","StudyInstanceUID","SOPClassUID","SOPInstanceUID","StudyTime","StudyDate","AccessionNumber","ReferencedSeriesSequence","getSingleImageDataFromSeg","Manufacturer","ManufacturerModelName","SoftwareVersions","PatientSex","PatientName","PatientID","PatientBirthDate","firstFrame","Array","isArray","PerFrameFunctionalGroupsSequence","DerivationImageSequence","derivation","SourceImageSequence","refSeries","ReferencedInstanceSequence","ReferencedSOPClassUID"],"mappings":"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"}